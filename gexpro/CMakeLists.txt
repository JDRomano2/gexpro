set(requiredlibs)

find_package(CURL)
if(CURL_FOUND)
  set(CURL_LIBRARY "-lcurl") 
  include_directories(${CURL_INCLUDE_DIR})
  SET(requiredlibs ${requiredlibs} ${CURL_LIBRARIES})
else(CURL_FOUND)
  MESSAGE(FATAL_ERROR "Could not find the CURL library and/or development files.")
endif(CURL_FOUND)

find_package(ZLIB)
if(ZLIB_FOUND)
  set(ZLIB_LIBRARY "-lz")
  include_directories(${ZLIB_INCLUDE_DIRS})
  set(requiredlibs ${requiredlibs} ${ZLIB_LIBRARIES})
else(ZLIB_FOUND)
  MESSAGE(FATAL_ERROR "Could not find Zlib library and/or development files.")
endif(ZLIB_FOUND)

set(Boost_USE_STATIC_LIBS ON)
find_package(Boost REQUIRED COMPONENTS system iostreams program_options)
if(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  set(requiredlibs ${requiredlibs} ${Boost_LIBRARIES})
else(Boost_FOUND)
  MESSAGE(FATAL_ERROR "Could not find Boost libaries")
endif(Boost_FOUND)

find_package(Armadillo REQUIRED)
if(ARMADILLO_FOUND)
  include_directories(${ARMADILLO_INCLUDE_DIRS} ${CURL_INCLUDE_DIR})
else(ARMADILLO_FOUND)
  MESSAGE(FATAL_ERROR "Could not find Armadillo")
  set(requiredlibs ${requiredlibs} ${ARMADILLO_LIBRARIES})
endif(ARMADILLO_FOUND)

add_library(gexpro gexpro.cpp geoParser.cpp normalizer.cpp multiGexpro.cpp)

target_link_libraries(gexpro ${ARMADILLO_LIBRARIES} ${CURL_LIBRARIES} ${LibArchive_LIBRARIES} ${Boost_LIBRARIES})
