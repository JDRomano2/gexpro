# Libcurl
SET(requiredlibs)

FIND_PACKAGE(CURL)
IF(CURL_FOUND)
  set(CURL_LIBRARY "-lcurl") 
  include_directories(${CURL_INCLUDE_DIR})
  SET(requiredlibs ${requiredlibs} ${CURL_LIBRARIES})
ELSE(CURL_FOUND)
  MESSAGE(FATAL_ERROR "Could not find the CURL library and/or development files.")
ENDIF(CURL_FOUND)

#SET(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "/usr/local/opt/libarchive/include")
#SET(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} "/usr/local/opt/libarchive/lib")
#FIND_PACKAGE(LibArchive)
#IF(LibArchive_FOUND)
#  set(LibArchive_LIBRARY "-larchive")
#  include_directories(${LibArchive_INCLUDE_DIRS})
#  SET(requiredlibs ${requiredlibs} ${LibArchive_LIBRARIES})
#ELSE(LibArchive_FOUND)
#  MESSAGE(FATAL_ERROR "Could not find LibArchive library and/or development files.")
#ENDIF(LibArchive_FOUND)

find_package(ZLIB)
IF(ZLIB_FOUND)
  set(ZLIB_LIBRARY "-lz")
  include_directories(${ZLIB_INCLUDE_DIRS})
  set(requiredlibs ${requiredlibs} ${ZLIB_LIBRARIES})
ELSE(ZLIB_FOUND)
  MESSAGE(FATAL_ERROR "Could not find Zlib library and/or development files.")
ENDIF(ZLIB_FOUND)

set(Boost_USE_STATIC_LIBS ON)
find_package(Boost REQUIRED COMPONENTS system iostreams)
IF(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  set(requiredlibs ${requiredlibs} ${Boost_LIBRARIES})
ELSE(Boost_FOUND)
  MESSAGE(FATAL_ERROR "Could not find Boost libaries")
ENDIF(Boost_FOUND)

find_package(Armadillo REQUIRED)
include_directories(${ARMADILLO_INCLUDE_DIRS} ${CURL_INCLUDE_DIR})

get_property(dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)
foreach(dir ${dirs})
  message(STATUS "dir='${dir}'")
endforeach()

add_library(gexpro gexpro.cpp geoParser.cpp)

target_link_libraries(gexpro ${ARMADILLO_LIBRARIES} ${CURL_LIBRARIES} ${LibArchive_LIBRARIES} ${Boost_LIBRARIES})
